name: "üîÑ Actualizaciones diarias y semanales"

on:
  workflow_dispatch:
    inputs:
      limit:
        description: "M√°ximo de t√≠tulos a procesar"
        required: false
        default: "200"
  schedule:
    - cron: "20 06 * * *"  # 06:20 UTC ‚âà 08:20 Europe/Madrid

permissions:
  contents: write

env:
  TZ: Europe/Madrid
  USER_AGENT: curioscience-bot/1.0 (+https://futurocientifico.vercel.app)
  # Rutas de trabajo
  ARTICLES_JSON: workspace/astro/public/articles.json
  ENRICHED_JSON: workspace/astro/public/articles_enriched.json

jobs:
  enrich_and_ensure:
    runs-on: ubuntu-latest
    steps:
      - name: üß∞ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîß Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: üì¶ Instalar jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: ‚úÖ Verificar entrada
        run: |
          set -euo pipefail
          test -s "$ARTICLES_JSON" || (echo "No existe $ARTICLES_JSON" && exit 1)
          jq length "$ARTICLES_JSON"

      - name: üß™ Enriquecer (ordenar + limpiar campos pesados)
        env:
          ARTICLES_IN:  ${{ env.ARTICLES_JSON }}
          ARTICLES_OUT: ${{ env.ENRICHED_JSON }}
        run: |
          set -euo pipefail
          node scripts/enrich-articles.js
          test -s "$ENRICHED_JSON" || (echo "No se gener√≥ $ENRICHED_JSON" && exit 1)
          echo "Total enriched: $(jq length "$ENRICHED_JSON")"

      - name: üîé Diagn√≥stico antes (title_es faltante/igual)
        env:
          FILE: ${{ env.ENRICHED_JSON }}
        run: |
          jq -r '[ .[] | select((.title_es|not) or (.title_es=="") or ((.title_es|ascii_downcase)==(.title|ascii_downcase))) ] | length' "$FILE"

      - name: üåê Asegurar t√≠tulos en ES (gratis)
        env:
          ARTICLES_IN:        ${{ env.ENRICHED_JSON }}
          ARTICLES_OUT:       ${{ env.ENRICHED_JSON }}
          TITLES_PER_RUN:     ${{ github.event.inputs.limit || '200' }}
          SLEEP_MS:           "800"
          USER_AGENT:         ${{ env.USER_AGENT }}
          MYMEMORY_EMAIL:     ${{ secrets.MYMEMORY_EMAIL }}  # opcional
          LIBRE_ENDPOINT:     ${{ vars.LIBRE_ENDPOINT }}     # opcional, ej: https://libretranslate.de
        run: |
          set -euo pipefail
          node scripts/ensure-title-es-free.mjs

      - name: üîé Diagn√≥stico despu√©s (title_es faltante/igual)
        env:
          FILE: ${{ env.ENRICHED_JSON }}
        run: |
          jq -r '[ .[] | select((.title_es|not) or (.title_es=="") or ((.title_es|ascii_downcase)==(.title|ascii_downcase))) ] | length' "$FILE"

      - name: ‚¨ÜÔ∏è Commit & push cambios
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "$ENRICHED_JSON"
          git commit -m "chore: ensure title_es (free)" || echo "No changes"
          git push

  update-eduflash:
    needs: enrich_and_ensure
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêç Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: üì¶ Instalar dependencias Python
        run: |
          python -m pip install --upgrade pip
          pip install feedparser beautifulsoup4

      - name: ‚ñ∂Ô∏è Ejecutar EduFlash
        run: |
          set -euo pipefail
          python scripts/eduflash_pipeline.py

      - name: üìù Commit y push de EduFlash
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add public/eduflash.json
          git commit -m "üìö EduFlash actualizado autom√°ticamente [skip ci]" || echo "Sin cambios"
          git push

