name: Lighthouse CI (staticDistDir, debug)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lhci:
    name: Auditar con Lighthouse
    runs-on: ubuntu-latest
    timeout-minutes: 20
    concurrency:
      group: lhci-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM 9
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Instalar dependencias
        run: pnpm install --frozen-lockfile

      - name: Build (Astro) sin Ads/Analytics/SW
        run: pnpm run build
        env:
          PUBLIC_DISABLE_TRACKING: "true"

      - name: Ver dist y validar config
        run: |
          echo "== DIST files (primeros 200) =="
          find dist -type f | sort | head -n 200
          echo "== Validate lighthouserc.json =="
          node -e "JSON.parse(require('fs').readFileSync('lighthouserc.json','utf8')); console.log('lighthouserc OK')"

      - name: LHCI healthcheck
        run: npx @lhci/cli healthcheck

      - name: LHCI collect (staticDistDir)
        env:
          DEBUG: "lhci:*"
          LHCI_CHROME_FLAGS: "--no-sandbox --disable-dev-shm-usage --headless=new"
        run: |
          npx @lhci/cli collect \
            --config=lighthouserc.json \
            --collect.staticDistDir=dist

      - name: LHCI assert
        run: npx @lhci/cli assert --config=lighthouserc.json

      - name: LHCI upload
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx @lhci/cli upload --config=lighthouserc.json

      - name: Subir reportes como artefacto
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lhci-reports
          path: .lighthouseci
